{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNLnixOQxkinc+kySRA0rEs"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"49LVSPhIlK7J","executionInfo":{"status":"ok","timestamp":1678650669095,"user_tz":0,"elapsed":2160,"user":{"displayName":"Asad Raja","userId":"01745811664429108254"}},"outputId":"15c3da86-ae11-48c2-c0dd-8e88d650a34d","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["import numpy as np\n","import pandas\n","import matplotlib.pyplot as plt\n","\n","#get temp and strength arrays\n","df = pandas.read_csv('http://pogo.software/me4ml/tensile_strength.csv')\n","T = np.array(df['Temperature (deg C)'][:]) \n","s = np.array(df['Ultimate tensile strength (Pa)'][:])\n","\n","#get means and standard deviations\n","t_mean = np.mean(T)\n","s_mean = np.mean(s)\n","t_std = np.std(T)\n","s_std = np.std(s)\n","\n","#define scaling functions\n","def scaling(x, mean, std):\n","    scaled = (x - mean)/std\n","    return scaled\n","\n","#apply scaling function\n","t_scale = scaling(T, t_mean, t_std)\n","s_scale = scaling(s, s_mean, s_std)\n","\n","#histogram plot\n","fig, ax = plt.subplots() \n","plt.hist(s_scale) \n","plt.show()\n","fig, ax = plt.subplots() \n","plt.hist(s) \n","plt.show()\n","\n","scArray = np.array([[t_mean, s_mean],[t_std, s_std]]) \n","np.savetxt('scaleParams.txt',scArray)\n","\n","#download it from the Colab interface:\n","from google.colab import files \n","#files.download('scaleParams.txt')\n","\n","#loadedScales = np.loadtxt('scaleParams.txt')\n","\n","#create meshgrid\n","x1line = np.linspace(0, 1, 200)\n","x2line = np.linspace(0, 1, 200)\n","x1grid, x2grid = np.meshgrid(x1line, x2line)\n","Xgrid = np.array([x1grid, x2grid]).reshape([2,40000])\n","\n","#find g values and do a contour plot\n","w0 = 1\n","w = np.array([-1, -3])\n","g = np.matmul(w, Xgrid) + w0\n","g_reshape=g.reshape(200, 200)\n","plt.contourf(x1line, x2line, g_reshape)\n","plt.colorbar()\n","\n","#plot line for g = 0\n","x1 = np.linspace(0, 1, 200)\n","x2 = (-w0 - w[0]*x1)/w[1]\n","plt.plot(x1, x2)\n","\n","\n","npx, npy = 200, 200\n","x1line = np.linspace(0, 1, npx)\n","x2line = np.linspace(0, 1, npy)\n","x1grid, x2grid = np.meshgrid(x1line, x2line)\n","Xgrid = np.array([x1grid, x2grid]).reshape([2, npx*npy]).T\n","\n","a1 = np.array([1.3, -1, -3])\n","a2 = np.array([-2, 1, 2])\n","a3 = np.array([0.3, 0.1, -0.1])\n","a4 = np.array([0, -1, 1])\n","a5 = np.array([-0.2, 1.5, -1])\n","\n","#Ygrid is defined as the same as Xgrid, except it has 1 \n","#at the beginning - this therefore adds a column of ones to the left\n","Ygrid = np.concatenate([np.ones([npx * npy,1]), Xgrid],axis=1) \n","\n","#calculate each of the five functions as before\n","g1 = np.matmul(a1, Ygrid.T) \n","g2 = np.matmul(a2, Ygrid.T) \n","g3 = np.matmul(a3, Ygrid.T) \n","g4 = np.matmul(a4, Ygrid.T) \n","g5 = np.matmul(a5, Ygrid.T)\n","#combine all five functions together\n","gconc = np.concatenate([[g1], [g2], [g3], [g4], [g5]])\n","print(np.shape(gconc))\n","\n","#define an array which will ultimately contain all of the class numbers\n","omega = np.zeros([1, npx * npy]) \n","for i in range(5):\n","\t#define an array which is one if it belongs to class i, \n","\t#and zero otherwise - set it to ones throughout to start with:\n","\tomhere = np.ones([1, npx*npy]) \n","\t\n","\t#loop through all of the classes\n","\tfor j in range(5):\n","\t\t#if there is another class with a higher value, set it to zero:\n","\t\tomhere[0,gconc[i,:]<gconc[j,:]] = 0\n","\n","\t#set values in omega which correspond to omhere == 1 to that \n","\t#particular category number (i + 1 - remember python is zero indexed). \n","\tomega[omhere == 1] = i + 1\n","#put back onto 2D grid so it can easily be plotted\n","omega = np.reshape(omega, [npx, npy])\n","\n","fig, ax = plt.subplots()\n","plt.contourf(x1line, x2line, omega)\n","plt.colorbar()"],"execution_count":1,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXcAAAD4CAYAAAAXUaZHAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/NK7nSAAAACXBIWXMAAAsTAAALEwEAmpwYAAAMp0lEQVR4nO3db4hlhXnH8e+vbmwa01aNw9bsakeIpEhIaxisxVLSbKBGQ9aWVAyl2abCEjCtaQLJGqG+KIGVlPxpKYEl2mxBrEENSpQ2dmuwfeHS1Uj8s6YuVuPK6k6aaNLmRSp5+mJO6HQz6+7MuTN35sn3AzL3nHvuPc9h5bvHM/dcU1VIknr5mWkPIEmaPOMuSQ0Zd0lqyLhLUkPGXZIa2jTtAQDOOuusmp2dnfYYkrShPPTQQ9+uqpmlnlsXcZ+dneXAgQPTHkOSNpQkzx7vOS/LSFJDxl2SGjLuktSQcZekhoy7JDVk3CWpIeMuSQ0Zd0lqyLhLUkPr4g5Vab2a3XXP1Pb9zO7Lp7ZvbXyeuUtSQ8Zdkhoy7pLUkHGXpIaMuyQ1ZNwlqSHjLkkNGXdJasi4S1JDxl2SGjLuktSQcZekhoy7JDV0wrgnuTnJ0SSPLVp3ZpL7kjw1/DxjWJ8kf5XkUJJvJHnbag4vSVrayZy5fxG49Jh1u4B9VXU+sG9YBngXcP7wz07g85MZU5K0HCeMe1U9AHznmNXbgb3D473AFYvW/10teBA4PcnZE5pVknSSVnrNfXNVHRkevwBsHh5vAZ5btN3hYd1PSLIzyYEkB+bn51c4hiRpKaN/oVpVBdQKXrenquaqam5mZmbsGJKkRVYa9xd/fLll+Hl0WP88cM6i7bYO6yRJa2ilcb8b2DE83gHctWj9+4dPzVwMvLzo8o0kaY2c8H+QneRW4O3AWUkOAzcAu4EvJbkaeBa4ctj8XuAy4BDwA+ADqzCzJOkEThj3qnrfcZ7atsS2BVwzdihJ0jjeoSpJDZ3wzF3SdMzuumcq+31m9+VT2a8myzN3SWrIM3dtCNM6i5U2Ks/cJakh4y5JDRl3SWrIuEtSQ8Zdkhoy7pLUkHGXpIaMuyQ1ZNwlqSHjLkkNGXdJasi4S1JDxl2SGjLuktSQcZekhoy7JDVk3CWpIeMuSQ0Zd0lqyLhLUkPGXZIaMu6S1JBxl6SGjLskNWTcJamhUXFP8mdJHk/yWJJbk7w2yXlJ9ic5lOS2JKdOalhJ0slZcdyTbAH+FJirqrcApwBXATcCn6mqNwHfBa6exKCSpJM39rLMJuDnkmwCXgccAd4B3D48vxe4YuQ+JEnLtOK4V9XzwF8C32Ih6i8DDwEvVdUrw2aHgS1LvT7JziQHkhyYn59f6RiSpCWMuSxzBrAdOA94I3AacOnJvr6q9lTVXFXNzczMrHQMSdISxlyWeSfwH1U1X1X/A9wJXAKcPlymAdgKPD9yRknSMo2J+7eAi5O8LkmAbcATwP3Ae4dtdgB3jRtRkrRcY66572fhF6cPA48O77UH+DjwkSSHgDcAN01gTknSMmw68SbHV1U3ADccs/pp4KIx7ytJGsc7VCWpIeMuSQ0Zd0lqyLhLUkPGXZIaMu6S1JBxl6SGRn3OXT99ZnfdM+0RJJ0Ez9wlqSHjLkkNGXdJasi4S1JDxl2SGjLuktSQcZekhoy7JDVk3CWpIeMuSQ0Zd0lqyLhLUkPGXZIaMu6S1JBxl6SGjLskNWTcJakh4y5JDRl3SWrIuEtSQ8ZdkhoaFfckpye5PcmTSQ4m+Y0kZya5L8lTw88zJjWsJOnkjD1z/xzwD1X1K8CvAgeBXcC+qjof2DcsS5LW0IrjnuQXgd8CbgKoqh9W1UvAdmDvsNle4IpxI0qSlmvMmft5wDzwt0m+nuQLSU4DNlfVkWGbF4DNS704yc4kB5IcmJ+fHzGGJOlYY+K+CXgb8PmquhD4b465BFNVBdRSL66qPVU1V1VzMzMzI8aQJB1rTNwPA4erav+wfDsLsX8xydkAw8+j40aUJC3XiuNeVS8AzyV587BqG/AEcDewY1i3A7hr1ISSpGXbNPL1fwLckuRU4GngAyz8hfGlJFcDzwJXjtyHJGmZRsW9qh4B5pZ4atuY95UkjeMdqpLUkHGXpIaMuyQ1ZNwlqSHjLkkNGXdJasi4S1JDxl2SGjLuktSQcZekhoy7JDVk3CWpIeMuSQ0Zd0lqyLhLUkPGXZIaMu6S1JBxl6SGjLskNWTcJakh4y5JDRl3SWrIuEtSQ8Zdkhoy7pLUkHGXpIaMuyQ1ZNwlqSHjLkkNjY57klOSfD3JV4bl85LsT3IoyW1JTh0/piRpOSZx5n4tcHDR8o3AZ6rqTcB3gasnsA9J0jKMinuSrcDlwBeG5QDvAG4fNtkLXDFmH5Kk5ds08vWfBT4G/Pyw/Abgpap6ZVg+DGxZ6oVJdgI7Ac4999yRY0ialNld90xt38/svnxq++5mxWfuSd4NHK2qh1by+qraU1VzVTU3MzOz0jEkSUsYc+Z+CfCeJJcBrwV+AfgccHqSTcPZ+1bg+fFjSpKWY8Vn7lV1XVVtrapZ4Crgn6vqD4D7gfcOm+0A7ho9pSRpWVbjc+4fBz6S5BAL1+BvWoV9SJJexdhfqAJQVV8DvjY8fhq4aBLvK0laGe9QlaSGjLskNWTcJakh4y5JDRl3SWpoIp+W0dqa5u3hkjYGz9wlqSHjLkkNGXdJasi4S1JDxl2SGjLuktSQcZekhoy7JDVk3CWpIeMuSQ0Zd0lqyLhLUkPGXZIaMu6S1JBxl6SGjLskNWTcJakh4y5JDRl3SWrIuEtSQ8Zdkhoy7pLU0KZpDyBJPza7656p7PeZ3ZdPZb+racVn7knOSXJ/kieSPJ7k2mH9mUnuS/LU8POMyY0rSToZYy7LvAJ8tKouAC4GrklyAbAL2FdV5wP7hmVJ0hpacdyr6khVPTw8/j5wENgCbAf2DpvtBa4YOaMkaZkm8gvVJLPAhcB+YHNVHRmeegHYfJzX7ExyIMmB+fn5SYwhSRqMjnuS1wN3AB+uqu8tfq6qCqilXldVe6pqrqrmZmZmxo4hSVpkVNyTvIaFsN9SVXcOq19Mcvbw/NnA0XEjSpKWa8ynZQLcBBysqk8veupuYMfweAdw18rHkyStxJjPuV8C/CHwaJJHhnWfAHYDX0pyNfAscOWoCSVJy7biuFfVvwI5ztPbVvq+kqTx/PoBSWrIuEtSQ8Zdkhoy7pLUkHGXpIb8yt8RpvX1pJJ0Ip65S1JDxl2SGjLuktSQcZekhoy7JDVk3CWpIeMuSQ0Zd0lqyLhLUkMb/g5V7xKVpJ/kmbskNbThz9wlaaxpXgF4Zvflq/K+nrlLUkPGXZIaMu6S1JBxl6SGjLskNWTcJakh4y5JDRl3SWrIuEtSQ8Zdkhoy7pLU0KrEPcmlSb6Z5FCSXauxD0nS8U087klOAf4GeBdwAfC+JBdMej+SpONbjTP3i4BDVfV0Vf0Q+Htg+yrsR5J0HKvxlb9bgOcWLR8Gfv3YjZLsBHYOi/+V5JtLvNdZwLcnPuH60fn4PLaNq/Pxrbtjy42jXv7Lx3tiat/nXlV7gD2vtk2SA1U1t0YjrbnOx+exbVydj6/zsR1rNS7LPA+cs2h567BOkrRGViPu/wacn+S8JKcCVwF3r8J+JEnHMfHLMlX1SpIPAf8InALcXFWPr/DtXvWyTQOdj89j27g6H1/nY/t/UlXTnkGSNGHeoSpJDRl3SWpo3cc9yV8k+UaSR5J8Nckbpz3TpCT5VJInh+P7cpLTpz3TJCX5/SSPJ/lRkhYfP+v81RpJbk5yNMlj055lkpKck+T+JE8M/z5eO+2Z1sK6jzvwqap6a1X9GvAV4M+nPM8k3Qe8pareCvw7cN2U55m0x4DfAx6Y9iCT8FPw1RpfBC6d9hCr4BXgo1V1AXAxcE2zP7clrfu4V9X3Fi2eBrT5DXBVfbWqXhkWH2ThnoA2qupgVS115/FG1fqrNarqAeA7055j0qrqSFU9PDz+PnCQhTvpW5vaHarLkeSTwPuBl4HfnvI4q+WPgdumPYRe1Ul9tYbWrySzwIXA/imPsurWRdyT/BPwS0s8dX1V3VVV1wPXJ7kO+BBww5oOOMKJjm3Y5noW/tPxlrWcbRJO5vik9SDJ64E7gA8fc0WgpXUR96p650luegtwLxso7ic6tiR/BLwb2FYb8KaDZfzZdeBXa2xQSV7DQthvqao7pz3PWlj319yTnL9ocTvw5LRmmbQklwIfA95TVT+Y9jw6Ib9aYwNKEuAm4GBVfXra86yVdX+HapI7gDcDPwKeBT5YVS3OlpIcAn4W+M9h1YNV9cEpjjRRSX4X+GtgBngJeKSqfmeqQ42U5DLgs/zfV2t8croTTU6SW4G3s/C1uC8CN1TVTVMdagKS/CbwL8CjLHQE4BNVde/0plp96z7ukqTlW/eXZSRJy2fcJakh4y5JDRl3SWrIuEtSQ8Zdkhoy7pLU0P8Cy9jRDFEzZZUAAAAASUVORK5CYII=\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["(5, 40000)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.colorbar.Colorbar at 0x7fca46baea00>"]},"metadata":{},"execution_count":1},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"yoAtmTJmc74n","executionInfo":{"status":"ok","timestamp":1604683488884,"user_tz":0,"elapsed":1182,"user":{"displayName":"Asad Raja","photoUrl":"https://lh3.googleusercontent.com/-qBjKzlIWRd8/AAAAAAAAAAI/AAAAAAAAEkA/VuUBV3qSGTk/s64/photo.jpg","userId":"01745811664429108254"}},"outputId":"69b6f198-c18d-4c79-e8d2-50249f10956a","colab":{"base_uri":"https://localhost:8080/","height":304}},"source":["a1 = np.array([1.3, -1, -3, -10])\n","a2 = np.array([-1, 1.5, 3, -1])\n","a3 = np.array([0.4, -0.1, -0.1, 3])\n","a4 = np.array([0.5, -1, 1, -0.1])\n","a5 = np.array([-0.2, 1.5, -1, 0.4])\n","\n","#Ygrid is defined as the same as Xgrid, except it has 1 \n","#at the beginning - this therefore adds a column of ones to the left\n","Ygrid = np.concatenate([np.ones([npx * npy,1]), Xgrid, np.array([Xgrid[:,0]*Xgrid[:,1]]).T],axis=1) \n","\n","#calculate each of the five functions as before\n","g1 = np.matmul(a1, Ygrid.T) \n","g2 = np.matmul(a2, Ygrid.T) \n","g3 = np.matmul(a3, Ygrid.T) \n","g4 = np.matmul(a4, Ygrid.T) \n","g5 = np.matmul(a5, Ygrid.T)\n","#combine all five functions together\n","gconc = np.concatenate([[g1], [g2], [g3], [g4], [g5]])\n","print(np.shape(gconc))\n","\n","#define an array which will ultimately contain all of the class numbers\n","omega = np.zeros([1, npx * npy]) \n","for i in range(5):\n","\t#define an array which is one if it belongs to class i, \n","\t#and zero otherwise - set it to ones throughout to start with:\n","\tomhere = np.ones([1, npx*npy]) \n","\t\n","\t#loop through all of the classes\n","\tfor j in range(5):\n","\t\t#if there is another class with a higher value, set it to zero:\n","\t\tomhere[0,gconc[i,:]<gconc[j,:]] = 0\n","\n","\t#set values in omega which correspond to omhere == 1 to that \n","\t#particular category number (i + 1 - remember python is zero indexed). \n","\tomega[omhere == 1] = i + 1\n","#put back onto 2D grid so it can easily be plotted\n","omega = np.reshape(omega, [npx, npy])\n","\n","fig, ax = plt.subplots()\n","plt.contourf(x1line, x2line, omega)\n","plt.colorbar()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(5, 40000)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.colorbar.Colorbar at 0x7fca469a7400>"]},"metadata":{"tags":[]},"execution_count":2},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}